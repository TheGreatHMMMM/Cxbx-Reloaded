name: GitHub CI

on:
  push:
    paths-ignore:
      - '.gitattributes'
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '.gitignore'
      - '*.bat'
      - '*.yml'
      - 'doc/**'
  pull_request:
    paths-ignore:
      - '.gitattributes'
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '.gitignore'
      - '*.bat'
      - '*.yml'
      - 'doc/**'

jobs:
  build-windows:
    name: Build (Windows, ${{ matrix.configuration }}) # runner.os doesn't work here
    runs-on: windows-2025
    env:
      POWERSHELL_TELEMETRY_OPTOUT: 1
    strategy:
      fail-fast: false
      matrix:
        configuration: [Release, Debug]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Generate CMake files
        run: cmake -B build -A Win32 -DBUILD_CXBXR_DEBUGGER=ON -DCMAKE_SYSTEM_VERSION=7
      - name: Build
        run: cmake --build build --config ${{ matrix.configuration }} -j $env:NUMBER_OF_PROCESSORS
      - name: Prepare artifacts
        run: cmake --install build --config ${{ matrix.configuration }} --prefix artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: CxbxReloaded-${{ matrix.configuration }}
          path: artifacts/bin
          if-no-files-found: error

  release:
    if: |
      github.event.action != 'pull_request' &&
      github.ref == 'refs/heads/master'     &&
      github.repository == 'Cxbx-Reloaded/Cxbx-Reloaded'
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Re-zip Release artifact
        id: zip
        run: |
          # Process only the Release artifact
          artifact="artifacts/CxbxReloaded-Release"
          if [ -d "$artifact" ]; then
            7z a "${artifact}.zip" "./${artifact}/*"
            if [ $(stat -c %s "${artifact}.zip") -le 100000 ]; then
              echo "Error: Archive ${artifact}.zip too small!"
              exit 1
            fi
          else
            echo "Error: Release artifact not found at $artifact"
            exit 1
          fi
          echo "tag_name=CI-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ steps.zip.outputs.tag_name }} artifacts/*.zip -p --target $GITHUB_SHA --title '${{ steps.zip.outputs.tag_name }}'
